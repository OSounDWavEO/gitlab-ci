include:
  - local: jobs/sonarqube.yml
  - local: jobs/build_docker.yml

stages:
  - test
  - test_report
  - build
  - build_docker

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_REF_PROTECTED == "true"

variables:
  BUILDER_IMAGE: golang:latest
  RUNNER_IMAGE: alpine

.builder:
  image: ${BUILDER_IMAGE}
  variables:
    GOPATH: $CI_PROJECT_DIR/.go
  before_script:
    - mkdir -p .go
    - export PATH=${GOPATH}/bin:${PATH}
    - 'echo "Builder image: ${BUILDER_IMAGE}"'
    - 'echo "Go version: $(go version)"'
    - go mod vendor

test:
  stage: test
  extends: .builder 
  script:
    - go install gotest.tools/gotestsum@latest
    - go install github.com/t-yuki/gocover-cobertura@latest
    - echo -e "\e[1;96mTesting...\e[0m";
    - GOARCH=amd64 gotestsum --junitfile junit-report.xml --format testname -- -gcflags=-l -coverprofile=coverage.out ./... ;
    - gocover-cobertura < coverage.out > coverage.xml;
  artifacts:
    when: always
    expire_in: 1 day
    paths:
      - "coverage.out"
      - "coverage.xml" 
    reports:
      junit: "junit-report.xml"
      cobertura: "coverage.xml"
      # coverage_report:
      #   coverage_format: cobertura
      #   path: "**/coverage.xml"
  rules:
    - if: $DISABLE_TEST != "true"

sonarqube-analysis-branch:
  extends: .sonarqube-analysis-brnach
  needs:
    - job: test
      optional: true

sonarqube analysis mr:
  extends: .sonarqube-analysis-mr
  needs:
    - job: test
      optional: true

build:
  stage: build
  extends: .builder
  needs:
    - job: test
      optional: true
  script:
    - echo -e "\e[1;96mBuilding...\e[0m";
    - GOOS=linux GOARCH=amd64 go build -ldflags "-X main.Version=${CI_PIPELINE_IID} -linkmode external -extldflags -static -s" -o bin/${CI_PROJECT_NAME} .
    - chmod +x bin/${CI_PROJECT_NAME}
  artifacts:
    paths:
      - bin/
    expire_in: 1 days
  rules:
    - if: $CI_PIPELINE_SOURCE != "merge_request_event"

build-docker:
  extends: .build-docker
  needs: 
    - build
