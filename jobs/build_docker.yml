.build-docker:
  image: docker:19.03.15
  stage: build_docker
  variables:
    DOCKERFILE_PATH: Dockerfile
  before_script:
    - if [ ! -f ${DOCKERFILE_PATH} ]; then
        echo "${DOCKERFILE_PATH} not exist, create one";
        scripts/create-go-dockerfile.sh;
      else
        echo -e "\e[33muse local Dockerfile from ${DOCKERFILE_PATH}\e[0m";
        if [ "${DOCKERFILE_PATH}" != "Dockerfile" ]; then cp -f ${DOCKERFILE_PATH} Dockerfile; fi;
      fi
  script:
    - more Dockerfile
    - docker login ${DOCKER_REGISTRY} -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}
    - DEFAULT_IMAGE_NAME=$(echo "${CI_PROJECT_PATH}" | tr '[:upper:]' '[:lower:]')
    - IMAGE_NAME="${DOCKER_REGISTRY}/${IMAGE_NAME:-$DEFAULT_IMAGE_NAME}"
    - DEFAULT_IMAGE_TAG=$(date +%y%m%d)-${CI_COMMIT_REF_SLUG}-${CI_PIPELINE_IID}
    - IMAGE_TAG=${IMAGE_TAG:-$DEFAULT_IMAGE_TAG}
    - FULL_IMAGE=${IMAGE_NAME}:${IMAGE_TAG}
    - docker build -t ${FULL_IMAGE} .
    - docker push ${FULL_IMAGE}
    - echo "FULL_IMAGE=${FULL_IMAGE}" >> build.env
  artifacts:
    reports:
      dotenv: build.env
  rules:
    - if: $CI_PIPELINE_SOURCE != "merge_request_event" && $DISABLE_PUSH != "true"